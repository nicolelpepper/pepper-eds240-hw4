---
title: "EDS 240 - HW2 Part 2: Final Project Data Exploration"
author: "Nicole Pepper"
date: 2025-02-04
format:
  html:
    code-fold: true
    embed-resources: true
execute: 
  eval: true
  warning: false
  message: false
editor_options: 
  chunk_output_type: console
---


### Set Up Workspace
```{r}
#| code-summary: "Load Libraries"
#| 
# ---- Load libraries ----
library(here)
library(dplyr)
library(tidyverse)
library(janitor)
library(tidycensus)
library(terra)
library(sf)
library(tmap)
library(readxl)
library(ggstream)
library(networkD3)

```


### Read in Project Data
```{r}
salmon <- read.csv(here::here("data","salmon", "WDFW-Salmonid_Population_Indicators__SPI__Escapement_20250214.csv")) |>
    clean_names()
```


### Explore Data
```{r}
salmon_species_year <- salmon |>
    filter(species %in% c("Coho", "Chum", "Chinhook", "Pink", "Sockeye")) |>
    filter(year > 1980) |>
    filter(production_type %in% c( "Natural")) |>
    group_by(species, year) |>
    summarise(count = sum(abundance_quantity, na.rm = TRUE)) |>
    ungroup()

```

```{r}
salmon_production_year <- salmon |>
    filter(species %in% c("Coho", "Chum", "Chinhook", "Pink", "Sockeye")) |>
    filter(year > 1980) |>
    group_by(production_type, year) |>
    summarise(count = sum(abundance_quantity, na.rm = TRUE)) |>
    ungroup()

```


```{r}
# Create the stacked area plot
ggplot(salmon_species_year, aes(x = year, y = count, fill = species)) +
    geom_area(alpha = 0.7) +  # Stacked area chart
    scale_x_continuous(breaks = seq(min(salmon_species_year$year), max(salmon_species_year$year), by = 5)) + # Adjust X-axis breaks
    labs(title = "Salmon Population Over Time",
         x = "Year",
         y = "Count",
         fill = "Species") +
    theme_minimal()
```


```{r}
# Create the stacked area plot
ggplot(salmon_production_year, aes(x = year, y = count, fill = production_type)) +
    geom_area(alpha = 0.7) +  # Stacked area chart
    scale_x_continuous(breaks = seq(min(salmon_production_year$year), max(salmon_production_year$year), by = 5)) + # Adjust X-axis breaks
    labs(title = "Salmon Population by Production Type Over Time",
         x = "Year",
         y = "Count",
         fill = "Production Type") +
    theme_minimal()
```


Next dataset
```{r}
salmon_ca <- read_excel(here::here("data","salmon","State_of_Salmon_in_CA_083024.xlsx")) |>
    clean_names() |>
    filter(c_name %in% c("Chinook")) |>
    
mutate(region = case_when(
    
    esu_dps_n %in% c("Central Valley Fall & Late Fall-run Chinook Salmon", 
                     "Central Valley Spring-run Chinook Salmon") ~ "Central Valley",
    
    esu_dps_n %in% c("Southern OR & Northern CA Coastal Chinook Salmon",
                     "Upper Klamath & Trinity Rivers Chinook Salmon") ~ "Northern California",
    
    esu_dps_n %in% c("Sacramento River Winter-run Chinook Salmon") ~ "Other",
    
    TRUE ~ "Other"  # Default category for any unmatched values
  ))
```

```{r}
ca_salmon_species_year <- salmon_ca |>
    filter(y_end > 1990) |>
    group_by(c_name, y_end) |>
    summarise(count = sum(abun_estimate, na.rm = TRUE)) |>
    ungroup()
```


```{r}
ca_salmon_region_year <- salmon_ca |>
    filter(y_end > 1990) |>
    group_by(region, y_end) |>
    summarise(count = sum(abun_estimate, na.rm = TRUE)) |>
    ungroup()
```


```{r}
# Create the stacked area plot
ggplot(ca_salmon_species_year, aes(x = y_end, y = count, fill = c_name)) +
    geom_stream(type = "ridge", alpha = 0.7) +  # Stacked area chart
    scale_x_continuous(breaks = seq(min(ca_salmon_species_year$y_end), max(ca_salmon_species_year$y_end), by = 5)) + # Adjust X-axis breaks
    labs(title = "CA Salmon Population Over Time",
         x = "Year",
         y = "Count",
         fill = "Species") +
    theme_minimal()
```


```{r}
# Create streamchart

ggplot(ca_salmon_region_year, aes(y_end, count, fill = region)) +
  geom_stream(type = "ridge") + 
theme_minimal() + 
    labs(title = "Are Chinook Salmon populations in California running low?", fill = "Spawning Region")
```


Salmon
```{r}
ca_salmon_region_year <- salmon_ca |>
    filter(y_end > 1990) |>
    group_by(region, y_end) |>
    summarise(count = sum(abun_estimate, na.rm = TRUE)) |>
    ungroup()
```


# Select most recent 5-years year
Sankey for proportion of salmon that goes to 

```{r}
# Group by watershed (assuming c_name contains "Chinook Salmon")
salmon_rivers <- salmon_ca |>
    filter(grepl("Chinook", c_name, ignore.case = TRUE)) |>  # Ensure correct filtering
    group_by(region) |>
    summarise(abundance = sum(abun_estimate, na.rm = TRUE)) |>
    ungroup()

# Create Nodes (Add "Chinook Salmon" as the first node)
nodes <- data.frame(name = c("Chinook Salmon", unique(salmon_rivers$region)))

# Create Links (Flow from "Chinook Salmon" to Watersheds)
links <- data.frame(
  source = 0,  # "Chinook Salmon" is always the source (index 0)
  target = match(salmon_rivers$region, nodes$name) - 1,  # Match watersheds to node index
  value = salmon_rivers$abundance
)

# Generate Sankey Diagram
sankeyNetwork(Links = links, Nodes = nodes,
              Source = "source", Target = "target",
              Value = "value", NodeID = "name",
              units = "Salmon", fontSize = 12, nodeWidth = 30)

```


Battle Creek
```{r}
battle_salmon <- salmon_ca |>
    filter(y_end > 1990) |>
    filter(c_name %in% c("Chinook")) |>
    filter(w_name %in% c("Battle Creek"))  |>
    group_by(y_end) |>
    summarise(abun_estimate = sum(abun_estimate, na.rm = TRUE)) |>
    ungroup()
```


```{r}
# Create the plot
ggplot(battle_salmon, aes(x = y_end, y = abun_estimate)) +
  geom_area(alpha = 0.6) +  # Creates the filled area chart
  geom_line(color = "NA", size = 1) +  # Adds a line for better visibility
  scale_fill_manual(values = c("Chinook" = "#E69F00")) +  # Set custom color
  labs(
    title = "Chinook Salmon Abundance in Battle Creek",
    x = "Year",
    y = "Estimated Abundance",
    fill = "Species"
  ) +
  theme_minimal() +  # Clean theme
  theme(legend.position = "top")
```


```{r}
# Prepare data
battle_salmon <- salmon_ca |>
    filter(y_end > 1995) |>
    filter(c_name == "Chinook") |>
    filter(w_name == "Battle Creek")  |>
    group_by(y_end, return_type) |>
    summarise(abun_estimate = sum(abun_estimate, na.rm = TRUE), .groups = "drop")

# Create the stacked area plot
ggplot(battle_salmon, aes(x = y_end, y = abun_estimate, fill = return_type)) +
  geom_stream(type = "ridge", alpha = 0.6) +  # Stacked area chart
  scale_fill_manual(values = c("Hatchery" = "cornflowerblue", "In-River" = "#56B4E9")) +  # Custom colors
  labs(
    title = "An Upstream Battle",
    subtitle = "Chinook Salmon Populations in Battle Creek",
    x = "Year",
    y = "Estimated Abundance",
    fill = "Return Type"
  ) +
  theme_minimal() +  
  theme(legend.position = "top")
```




```{r}
# Prepare data
battle_salmon <- salmon_ca |>
    filter(y_end > 1995) |>
    filter(c_name == "Chinook") |>
    filter(w_name == "Battle Creek")  |>
    group_by(y_end, r_timing) |>
    summarise(abun_estimate = sum(abun_estimate, na.rm = TRUE), .groups = "drop")


# Create the stacked area plot
ggplot(battle_salmon, aes(x = y_end, y = abun_estimate, fill = r_timing)) +
  geom_stream(type = "ridge", alpha = 0.6) +  # Stacked area chart   # Custom colors
  labs(
    title = "An Upstream Battle",
    subtitle = "Chinook Salmon Populations in Battle Creek",
    x = "Year",
    y = "Estimated Abundance",
    fill = "Return Type"
  ) +
  theme_minimal() +  
  theme(legend.position = "top")
```


```{r}
# Prepare data
battle_salmon <- salmon_ca |>
    filter(y_end > 1995) |>
    filter(c_name == "Chinook") |>
    filter(w_name == "Battle Creek")  |>
    filter(r_timing == "Fall-run Chinook")  |>
    group_by(y_end, r_timing) |>
    summarise(abun_estimate = sum(abun_estimate, na.rm = TRUE), .groups = "drop")


# Create the stacked area plot
ggplot(battle_salmon, aes(x = y_end, y = abun_estimate, fill = r_timing)) +
  geom_stream(type = "ridge", alpha = 0.6) +  # Stacked area chart   # Custom colors
  labs(
    title = "An Upstream Battle",
    subtitle = "Fall Run Chinook",
    x = "Year",
    y = "Estimated Abundance",
    fill = "Return Type"
  ) +
  theme_minimal() +  
  theme(legend.position = "top")
```


```{r}
# Prepare data
battle_salmon <- salmon_ca |>
    filter(y_end > 1995) |>
    filter(c_name == "Chinook") |>
    filter(w_name == "Battle Creek")  |>
    filter(r_timing == "Late Fall-run Chinook")  |>
    group_by(y_end, r_timing) |>
    summarise(abun_estimate = sum(abun_estimate, na.rm = TRUE), .groups = "drop")


# Create the stacked area plot
ggplot(battle_salmon, aes(x = y_end, y = abun_estimate, fill = r_timing)) +
  geom_stream(type = "ridge", alpha = 0.6) +  # Stacked area chart   # Custom colors
  labs(
    title = "An Upstream Battle",
    subtitle = "Late Fall Run Chinook",
    x = "Year",
    y = "Estimated Abundance",
    fill = "Return Type"
  ) +
  theme_minimal() +  
  theme(legend.position = "top")
```



```{r}
# Prepare data
battle_salmon <- salmon_ca |>
    filter(y_end > 1995) |>
    filter(c_name == "Chinook") |>
    filter(w_name == "Battle Creek")  |>
    filter(r_timing == "Spring-run Chinook")  |>
    group_by(y_end, r_timing) |>
    summarise(abun_estimate = sum(abun_estimate, na.rm = TRUE), .groups = "drop")


# Create the stacked area plot
ggplot(battle_salmon, aes(x = y_end, y = abun_estimate, fill = r_timing)) +
  geom_stream(type = "ridge", alpha = 0.6) +  # Stacked area chart   # Custom colors
  labs(
    title = "An Upstream Battle",
    subtitle = "Spring Run Chinook",
    x = "Year",
    y = "Estimated Abundance",
    fill = "Return Type"
  ) +
  theme_minimal() +  
  theme(legend.position = "top")
```


```{r}
# Prepare data
battle_salmon <- salmon_ca |>
    filter(y_end > 1995) |>
    filter(c_name == "Chinook") |>
    filter(w_name == "Battle Creek")  |>
    filter(r_timing == "Winter-run Chinook")  |>
    group_by(y_end, r_timing) |>
    summarise(abun_estimate = sum(abun_estimate, na.rm = TRUE), .groups = "drop")


# Create the stacked area plot
ggplot(battle_salmon, aes(x = y_end, y = abun_estimate, fill = r_timing)) +
  geom_stream(type = "ridge", alpha = 0.6) +  # Stacked area chart   # Custom colors
  labs(
    title = "An Upstream Battle",
    subtitle = "Winter Run Chinook",
    x = "Year",
    y = "Estimated Abundance",
    fill = "Return Type"
  ) +
  theme_minimal() +  
  theme(legend.position = "top")
```